import Head from 'next/head'
import Header from '@/components/Header'
import classes from '@/styles/index.module.css'
import LinkButton from '@/components/LinkButton'
import TabGroup from '@/components/TabGroup'
import QuestionnaireGroup from '@/components/QustionnaireGroup'
import HeadingLabel from '@/components/HeadingLabel'
import PostArea from '@/components/PostArea'
import { useState, useMemo, useEffect, useCallback, useRef } from 'react'

export default function Home() {

  const [questionnaires, setQuestionnaires] = useState([])
  const isFetchFirst = useRef(true)

  const fetchAllQustionnaires = useCallback(async () => {

      const API_ENDPOINT = "http://localhost:3005"

      try {
          const allQustionnaires = await fetch(API_ENDPOINT + "/qustionnaires").then(res => res.json())
          console.log(allQustionnaires)
          setQuestionnaires((prevState) => [...prevState, ...allQustionnaires])
      } catch (error) {
          console.error(error)
      }
  }, [])

  const priorityQustionnaires = useMemo(() => {

      const priorityQuestions = questionnaires.filter(question => question.isPriority === true)
      const regularQuestions = questionnaires.filter(question => question.isPriority === false)
      
      return {
          "priority": priorityQuestions,
          "regular": regularQuestions
      }

  }, [questionnaires])

  useEffect(() => {
      
      if (process.env.NODE_ENV === "development") {
          if (isFetchFirst.current) {
              isFetchFirst.current = false;
            return;
          }
        }
      fetchAllQustionnaires()
  }, [])

  return (
    <>
      <Head>
        <title>C-Qustionare(トップページ)</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Header />
      <div className={classes.mask}>
        <div className={classes.visual_box}>
          <img src="" alt="" />
          <LinkButton link="#" text="C-questionareについて" isAbsolute={true}/>
        </div>
        <main className={classes.main_container}>
          <TabGroup />
          <PostArea>
            <HeadingLabel text="最新投稿アンケート" isWhite={false}/>
            <QuestionnaireGroup isPriority={true} questionnaires = { priorityQustionnaires.priority }/>
          </PostArea>
        </main>
      </div>
    </>
  )
}
